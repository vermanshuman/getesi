<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:p="http://primefaces.org/ui"
                xmlns:pe="http://primefaces.org/ui/extensions"
                template="/resources/tpl/Admin/FormBase.xhtml">
    <ui:param name="bean" value="#{mailManagerEditBean}"/>
    <ui:define name="form_body">
        <link href="#{facesContext.externalContext.requestContextPath}/resources/styles/mail.css"
              media="all" rel="stylesheet" type="text/css"/>
        <style>
            body .ui-widget-header {
                background-color: #FFFFFF !important;
                color: #ffffff !important;
                font-size: 15px;
            }

            body .ui-inputfield {
                border: 1px solid #a8acb1;
                font-size: 15px;
            }

            body .ui-selectonemenu {
                border: 1px solid #a8acb1;
            }

            body .ui-autocomplete-panel .ui-autocomplete-items .ui-autocomplete-item.ui-autocomplete-row > td {
                padding: 0.5rem 0.5rem !important;
            }
            body .ui-autocomplete-panel .ui-autocomplete-items .ui-autocomplete-item.ui-autocomplete-row {
                font-size: 19px !important;
                border-color: #A7A8AB;
            }
            #mailTo_panel,#mailCC_panel,#mailBCC_panel{
                width: 400px !important;
            }
            #mailTo .ui-icon-close,#mailCC_panel .ui-icon-close,#mailBCC_panel .ui-icon-close{
                background: none repeat scroll 0 0 transparent!important;
                display: inline-block;
                font: normal normal normal 14px/1 FontAwesome !important;
                font-size: inherit;
                text-rendering: auto;
                -webkit-font-smoothing: antialiased;
            }

            #mailTo_panel .fa-times,#mailCC_panel .fa-times,#mailBCC_panel .fa-times{
                color: #FFFFFF !important;
            }

            #mailTo_panel .ui-autocomplete-item .ui-button, #mailCC_panel .ui-autocomplete-item .ui-button,#mailBCC_panel .ui-autocomplete-item .ui-button{
                background: red !important;
            }

            #mailTo_panel .ui-autocomplete-item > td,#mailCC_panel .ui-autocomplete-item > td,#mailBCC_panel .ui-autocomplete-item > td{
                font-size: 14px !important;
            }

            #mailTo_panel .ui-state-highlight,#mailCC_panel .ui-state-highlight,#mailBCC_panel .ui-state-highlight{
                background: lightgray !important;
                color: black !important;
            }

            #mailTo .ui-icon-close:before{
                content: "\f00d" !important;
            }
            
            .ui-datatable-scrollable-theadclone > tr > th{
                border : none !important;
            }
            #attachFielDlg{
                width:50% !important;
                left: calc(25% - 0px) ;
                border: 2px solid #57c279 !important;
            }
            #tableFiles > .ui-datatable-tablewrapper > table > tbody > tr > td {
                border-color: #808080 !important;
            }
            body .ui-fileupload .ui-fileupload-buttonbar,body .ui-fileupload .ui-fileupload-content{

                border: 1px solid #808080 !important;
            }
        </style>

        <script type="text/javascript">
            var closeTab = false;
            var isSend = false;
            window.onbeforeunload = function (e) {
                if (change &amp;&amp; !closeTab &amp;&amp; !getIsSend()) {
                    setIsSend(false);
                    return 'Salvare l\'email in bozza?';
                }
            };

            var openHandler = function () {
                var str = $(this).attr('href');
                $("#url").val(str.replace('#{facesContext.externalContext.requestContextPath}', ''));
                if (change) {
                    confirmRedirect();
                } else {
                    onRedirect();
                }
                return false;
            };

            function setCloseTab() {
                closeTab = true;
            }

            function setIsSend(e) {
                isSend = e;
            }

            function getIsSend() {
                return isSend;
            }

            $(function () {
                $('a').each(function () {
                    if (!$(this).attr('href').includes('#mainTab') &amp;&amp; !$(this).attr('href').includes('javascript:void')) {
                        if (!$(this).attr('class') || !$(this).attr('class').includes('ui-dialog-titlebar-icon ui-dialog-titlebar-close ui-corner-all')) {
                            if (!$(this).attr('class') || !$(this).attr('class').includes('ripplelink')) {
                                $(this).off();
                                $(this).bind("click", openHandler);
                            }
                        }
                    }
                });
            });

            function lockValue(event) {
                if (event.keyCode == 32 || event.key == ',') {
                    if (event.srcElement.value != null &amp;&amp; event.srcElement.value.trim() != '') {
                        var valueLi = event.srcElement.value;
                        event.srcElement.value = '';
                        var liel = document.createElement("LI");
                        liel.className = 'ui-autocomplete-token ui-state-active ui-corner-all ui-helper-hidden';
                        liel.style = 'display: list-item;';
                        liel.setAttribute('data-token-value', valueLi);
                        var closeNode = document.createElement("SPAN");
                        closeNode.className = 'ui-autocomplete-token-icon ui-icon ui-icon-close';
                        var liNode = document.createElement("SPAN");
                        liNode.className = 'ui-autocomplete-token-label';
                        liNode.innerHTML = valueLi;
                        liel.appendChild(closeNode);
                        liel.appendChild(liNode);
                        event.srcElement.parentElement.parentElement.insertBefore(liel, event.srcElement.parentElement);
                        event.srcElement.value = event.srcElement.value.substring(0, event.srcElement.value.length - 2);
                        var optionTag = document.createElement("OPTION");
                        optionTag.value = valueLi;
                        optionTag.setAttribute('selected', 'selected');
                        document.getElementById("mailTo_hinput").appendChild(optionTag);
                    }
                    return false;
                }
                return true;
            }

            var change = false;
            $(function () {
                // Set the unload message whenever any input element get changed.
                $(':input').on('change', function () {
                    change = true;
                    $("#changeVar").val("change");
                });
                // Turn off the unload message whenever a form get submitted properly.
                $('form').on('submit', function () {
                    change = false;
                    $("#changeVar").val("change");
                });
                $( "#mailTo .ui-autocomplete-multiple-container .ui-autocomplete-input-token input" ).focusout(function() {
                    emailHeightAdjust();
                }).focus(function() {
                    $( "#mailTo .ui-autocomplete-multiple-container" ).css("height", "auto");
                });
                emailHeightAdjust();
            });
            function emailHeightAdjust() {
                var noOfEmail = $( "#mailTo .ui-autocomplete-multiple-container li" ).length - 1;
                if(noOfEmail != 0 &amp;&amp; noOfEmail%2==0) {
                    $( "#mailTo .ui-autocomplete-multiple-container" ).css("height", (((noOfEmail/2)*38)+'px'));
                }
            }
        </script>

        <p:remoteCommand name="onRedirect" action="#{bean.confirmRedirect(false)}" oncomplete="setCloseTab();"/>
        <p:remoteCommand actionListener="#{bean.saveDraft}" name="saveDraft"/>
        <p:remoteCommand name="confirmRedirect" oncomplete="PF('confirmRedirect').show();" onstart="setCloseTab();"/>
        <p:remoteCommand name="showNotSendMsg" onstart="PF('showSendErrorDialog').show();PF('mailManagerSendTop').disable();PF('mailManagerSendBottom').disable();" />
        <h:inputHidden id="url" value="#{bean.url}"/>
        <h:inputHidden id="changeVar" value="#{bean.changeVar}"/>
        <p:outputPanel id="print_panel" style="visibility: hidden; position: absolute;">
            <iframe id="mail_pdf_iframe" srcdoc="#{bean.mailPdf}"/>
        </p:outputPanel>
        <ui:include src="/resources/tpl/Admin/Include/ButtonLine.xhtml"/>
        <p:remoteCommand action="#{bean.deleteEmailTo}" name="removeEmailAddressTo" update="mailTo"/>
        <p:remoteCommand action="#{bean.deleteEmailCC}" name="removeEmailAddressCC" update="mailCC"/>
        <p:remoteCommand action="#{bean.deleteEmailBCC}" name="removeEmailAddressBCC" update="mailBCC"/>
        <p:panel id="mail_edit_general_panel" style="border: none">
            <p:panelGrid id="mail_edit_grid" styleClass="ui-panelgrid-blank form-group">
                <p:row>
                    <p:column>
                        <h:outputText value="#{msg.mailManagerEditMailTo}:" style="font-weight: bold;"/>
                    </p:column>
                    <p:column colspan="8">
                        <p:autoComplete value="#{bean.sendTo}"
                                        completeMethod="#{bean.completeDestinations}"
                                        var="dest" itemLabel="#{dest}" itemValue="#{dest}" id="mailTo"
                                        inputStyle="width: 100%;"
                                        style="width: 100%;" maxResults="6"
                                        multiple="true"
                                        onkeydown="return lockValue(event);" immediate="false">
                            <p:column>
                                <h:outputText value="#{dest}" escape="false"/>
                            </p:column>
                            <p:column style="width: 32px;">
                                <p:commandButton icon="fa fa-times"
                                                 onclick="removeEmailAddressTo([{name:'param', value:'#{dest}'}]);"/>
                            </p:column>
                        </p:autoComplete>
                    </p:column>
                    <p:column>
                        <p:commandButton value="#{msg.mailManagerChooseEmail}" action="#{bean.loadClients}"
                                         update="clientEmailsPanel"
                                         oncomplete="PF('clientEmailsWV').show();" icon="fa fa-search"
                                         styleClass="grey-button"/>
                    </p:column>
                </p:row>
                <p:row>
                    <p:column>
                        <h:outputText value="#{msg.mailManagerEditMailCopy}:" style="font-weight: bold;"/>
                    </p:column>
                    <p:column colspan="8">
                        <p:autoComplete value="#{bean.sendCC}" multiple="true"
                                        completeMethod="#{bean.completeMailCC}" immediate="false"
                                        var="dest" itemLabel="#{dest}" itemValue="#{dest}" id="mailCC"
                                        inputStyle="width: 100%;" style="width: 100%" maxResults="6">
                            <p:column>
                                <h:outputText value="#{dest}" escape="false"/>
                            </p:column>
                            <p:column style="width: 32px;">
                                <p:commandButton icon="fa fa-times"
                                                 onclick="removeEmailAddressCC([{name:'param', value:'#{dest}'}]);"/>
                            </p:column>
                        </p:autoComplete>
                    </p:column>
                </p:row>
                <p:row>
                    <p:column>
                        <h:outputText value="#{msg.mailManagerEditMailBlindCopy}:" style="font-weight: bold;"/>
                    </p:column>
                    <p:column colspan="8">
                        <p:autoComplete value="#{bean.sendBCC}" multiple="true"
                                        completeMethod="#{bean.completeMailBCC}" immediate="false"
                                        var="dest" itemLabel="#{dest}" itemValue="#{dest}" id="mailBCC"
                                        inputStyle="width: 100%;" style="width: 100%" maxResults="6">
                            <p:column>
                                <h:outputText value="#{dest}" escape="false"/>
                            </p:column>
                            <p:column style="width: 32px;">
                                <p:commandButton icon="fa fa-times"
                                                 onclick="removeEmailAddressBCC([{name:'param', value:'#{dest}'}]);"/>
                            </p:column>
                        </p:autoComplete>
                    </p:column>
                    <p:column>
                    </p:column>
                </p:row>
                <p:row>
                    <p:column>
                        <h:outputText value="#{msg.mailManagerEditMailSubject}:" style="font-weight: bold;"/>
                    </p:column>
                    <p:column colspan="8">
                        <p:inputTextarea value="#{bean.entity.emailSubject}" rows="1" style="width: 78%;"/>
                    </p:column>
                    <p:column/>
                </p:row>
                <p:row>
                    <p:column>
                        <h:outputText value="#{msg.mailManagerPriority}:" style="font-weight: bold;"/>
                    </p:column>
                    <p:column>
                        <p:selectOneMenu value="#{bean.selectedPriorityWrapper}">
                            <f:selectItems value="#{bean.priorityWrappers}" var="element" itemValue="#{element.id}"
                                           itemLabel="#{element}"/>
                        </p:selectOneMenu>
                    </p:column>
                    <p:column/>
                    <p:column>
                        <h:outputText value="#{msg.mailManagerEditDeliveryNotification}:" style="font-weight: bold;"/>
                    </p:column>
                    <p:column>
                        <p:selectBooleanCheckbox value="#{bean.entity.deliveredNotification}"/>
                    </p:column>
                    <p:column/>
                    <p:column>
                        <h:outputText value="#{msg.mailManagerEditNotificationTo}:" style="font-weight: bold;"/>
                    </p:column>
                    <p:column>
                        <p:selectBooleanCheckbox value="#{bean.entity.dispositionNotificationTo}"/>
                    </p:column>
                    <p:column/>
                    <p:column>
                        <p:commandButton value="#{msg.mailManagerEditMailAttachedFiles}"
                                         oncomplete="PF('attachFielDlgWV').show();" icon="fa fa-paperclip"
                                         styleClass="grey-button" style="margin-bottom: 10px"/>
                    </p:column>
                    <p:column>
                        <p:outputPanel id="listFile">
                            <ui:repeat value="#{bean.attachedFiles}" var="file">
                                <p:commandButton icon="fa fa-paperclip" title="#{msg.download}" update=":form, messages"
                                                 ajax="false"
                                                 action="#{bean.downloadFile}" value="&nbsp;#{file.fileName}"
                                                 style="background-color: transparent!important;color: #5f666c!important; padding-right: 5px;">
                                    <f:setPropertyActionListener value="#{file.id}" target="#{bean.downloadFileIndex}"/>
                                </p:commandButton>
                            </ui:repeat>
                        </p:outputPanel>
                    </p:column>
                </p:row>
            </p:panelGrid>
            <pe:ckEditor id="body"
                         value="#{bean.entity.emailBodyToEditor}"
                         styleClass="for_editor" width="auto" height="500"
                         contentsCss="#{facesContext.externalContext.requestContextPath}/resources/javascript/CKEditorStyles.css"
                         customConfig="#{facesContext.externalContext.requestContextPath}/resources/javascript/configCKEditorMailManager.js"
                         widgetVar="ckEditorWV">
                <p:ajax event="initialize" onstart="onInitCkEditor();"/>
            </pe:ckEditor>
        </p:panel>
        <script>
            function onInitCkEditor() {
                console.log("start init CKEditor");
                CKEDITOR.timestamp='17.07.2018';
                CKEDITOR.env.isCompatible = true;
                removeAllTooltips('#bodyPanel');
                CKEDITOR.instances.body.on('fixWidth', function () {
                    fixWidthCKEditorBody();
                });
                CKEDITOR.instances.body.ui.editor.toolbar[3].items[0].onClick('Times New Roman');
                CKEDITOR.instances.body.ui.editor.toolbar[3].items[1].onClick('16');
                CKEDITOR.instances.body.ui.editor.on('change', function () {
                    $("#changeVar").val("change");
                    change = true;
                });

                CKEDITOR.instances.body.ui.editor.on('key', HandleTabEvent, null, null, 0);

                console.log("init success");
            }

            function fixWidthCKEditorBody() {
                var newWidth = parseInt(($("#bodyPanel").width() - 27) / (CKEDITOR.instances.body.ui.editor.toolbar[8].items[0].lastValue / 100), 10);
                $("#bodyPanel").find(".cke_wysiwyg_frame").contents().find("body").css('width', newWidth + 'px');
            }

            // Custom Key Events function
            function HandleTabEvent(e) {
                if (e.data.keyCode == 9){
                    var selection = CKEDITOR.instances.body.ui.editor.getSelection();
                    var startElement = selection.getStartElement();
                    if (e.data.keyCode == 9){
                        var handleTab = false;
                        var x = $(".cke_button__bulletedlist");
                        if(x &amp;&amp; x.attr('class') == 'cke_button cke_button__bulletedlist cke_button_on'){
                            handleTab = true;
                        }else {
                            x = $(".cke_button__numberedlist");
                            if(x &amp;&amp; x.attr('class') == 'cke_button cke_button__numberedlist cke_button_on'){
                                handleTab = true;
                            }
                        }
                        if(handleTab){
                            var element = selection.getStartElement();
                            var sText = element.getHtml();
                            var text = jQuery('&lt;div&gt;').html(sText).text();
                            var result = text.replace(/[^ -~]+/g, "");
                            if(!result || 0 === result.length){
                            }else {
                                e.cancel();
                                e.stop();
                                CKEDITOR.instances.body.ui.editor.insertText('    ');
                            }
                        }
                    }
                }
            }
        </script>
        <ui:include src="/resources/tpl/Admin/Include/ButtonLineBottom.xhtml"/>
        <p:remoteCommand update="listFile" name="updateFiles"/>
        <p:dialog id="attachFielDlg" widgetVar="attachFielDlgWV" modal="true"
                  resizable="false" draggable="false" width="80%" height="400" onHide="updateFiles()">
            <p:ajax event="close" oncomplete="updateFiles()"/>

            <h:outputText value="#{msg.mailManagerEditMailAttachedFiles}:"
                          style="font-weight: bold;"/>

            <p:dataTable emptyMessage="#{msg.noRecordsFound}" var="file"
                         value="#{bean.attachedFiles}" id="tableFiles">
                <f:facet name="header">
                    <p:fileUpload fileUploadListener="#{bean.handleFileUpload}"
                                  mode="advanced" auto="true" multiple="true"
                                  label="#{msg.mailManagerChooseAttachedFiles}" update="tableFiles"/>
                </f:facet>
                <p:column styleClass="action_column" exportable="false">
                    <p:commandButton icon="pi pi-times" style="background-color: #F3362B !important;"
                                     update=":form:tableFiles" action="#{bean.deleteFile}">
                        <f:setPropertyActionListener value="#{file.id}"
                                                     target="#{bean.deleteFileId}"/>
                    </p:commandButton>
                </p:column>
                <p:column styleClass="action_column" exportable="false">
                    <p:commandButton icon="fa fa-fw fa-download" ajax="false"
                                     update=":form:tableFiles" action="#{bean.downloadFile}">
                        <f:setPropertyActionListener value="#{file.id}" target="#{bean.downloadFileIndex}"/>
                    </p:commandButton>
                </p:column>
                <p:column styleClass="action_column" exportable="false">
                    <i class="#{file.icon} #{file.style}" style="font-size: 26px"/>
                </p:column>
                <p:column headerText="#{msg.mailManagerAttachedFileName}"
                          style="border-width: 1px; border-style: solid; border-color: #DDDDDD;">
                    <h:outputText value="#{file.fileName}"/>
                </p:column>
            </p:dataTable>
        </p:dialog>

        <p:dialog id="clientEmails" widgetVar="clientEmailsWV" modal="true" width="80%" height="800"
                  resizable="false" draggable="false">

            <ui:include src="MailManagerSelectEmails.xhtml"/>

            <div class="btn_line">
                <p:commandButton value="#{msg.confirm.toUpperCase()}" update="@form"
                                 action="#{bean.addSelectedAddresses}" styleClass="green-button"
                                 oncomplete="PF('clientEmailsWV').hide();"/>
                <p:commandButton value="#{msg.cancel.toUpperCase()}" styleClass="red-button"
                                 oncomplete="PF('clientEmailsWV').hide();"/>
            </div>
        </p:dialog>
        <p:dialog id="confirmRedirect" widgetVar="confirmRedirect" modal="true" styleClass="dialog-green"
                  resizable="false" draggable="false">
            <p:outputLabel value="#{msg.mailManagerConfirmDialog}"/>
            <div class="btn_line">
                <p:commandButton value="#{msg.yes.toUpperCase()}"
                                 action="#{bean.confirmRedirect(true)}"
                                 styleClass="green-button" style="margin-right: 0.5cm;"
                                 oncomplete="PF('confirmRedirect').hide();"/>
                <p:commandButton value="#{msg.no.toUpperCase()}"
                                 action="#{bean.confirmRedirect(false)}"
                                 styleClass="red-button"
                                 oncomplete="PF('confirmRedirect').hide();"/>
            </div>
        </p:dialog>
        <p:dialog id="selectFolder" widgetVar="selectFolderWV" modal="true" resizable="false" draggable="false">
            <h:outputText value="#{msg.mailManagerSelectFolder}"/>
            <h:outputText rendered="#{bean.userFolders.size()==1}" value=" #{bean.userFolders[0].label}"/>
            <h:outputText value="?"/><br/>
            <div class="btn_line">
                <p:selectOneMenu value="#{bean.selectedFolderId}" rendered="#{bean.userFolders.size()!=1}">
                    <f:selectItems value="#{bean.userFolders}"/>
                </p:selectOneMenu>
            </div>
            <div class="btn_line">
                <p:commandButton value="#{msg.yes.toUpperCase()}" action="#{bean.confirmSelectFolder(true)}"
                                 styleClass="green-button" oncomplete="PF('selectFolderWV').hide();"/>
                <p:commandButton value="#{msg.no.toUpperCase()}" action="#{bean.confirmSelectFolder(false)}"
                                 styleClass="red-button" oncomplete="PF('selectFolderWV').hide();"/>
            </div>
        </p:dialog>
        <p:dialog widgetVar="showSendErrorDialog" modal="true" resizable="false" draggable="false" styleClass="dialog-green">
            <p:ajax event="close" listener="#{bean.goList}"
                    oncomplete="PF('mailManagerSendTop').enable();PF('mailManagerSendBottom').enable();"/>
            <h:outputText value="#{val.errorSendMail}"/>
        </p:dialog>
    </ui:define>
</ui:composition>